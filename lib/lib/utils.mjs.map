{"version":3,"file":"utils.mjs","names":["validator","fixNullable","schema","Object","getOwnPropertyNames","forEach","property","nullable","type","Array","isArray","indexOf","generateName","input","nameFor","chars","name","whitelist","undefined"],"sources":["../../src/lib/utils.js"],"sourcesContent":["//TODO:\n/*\nEn la reunión del 25 de mayo decidimos: (ver video para concretar más)\n-Todo lo que no sea alfabetico o dígito se borra para nombres de: ARCHIVO, FUNCION (si no hay opId busca una función con func al principio), VARIABLE\n-Despues, a lo que vaya a ser variable no se le quita nada del principio y se le añade var, y a lo que vaya a ser funcion se le agrega func.\n\n\nCasuística: checkear esto\n-No operationId y no x-router-controller\n-Si operationId y no x-router-controller\n-No operationId y si x-router-controller\n-Sí operationId y si x-router-controller\n-Si operationId pero erroneo\n-Project name no válido en package.json\n\nConsiderar que:\n-Nombre de controlador va a ser tambíen nombre de variable\n-OperationId será usado únicamente como nombre de función\n*/\n\nimport * as validator from \"validator\";\n\nexport function fixNullable(schema) {\n  Object.getOwnPropertyNames(schema).forEach((property) => {\n    if (\n      property === \"type\" &&\n      schema.nullable === true &&\n      schema.type !== \"null\" &&\n      !Array.isArray(schema.type) &&\n      schema.type.indexOf(\"null\") === -1\n    ) {\n      schema.type = [schema.type, \"null\"];\n    } else if (\n      typeof schema[property] === \"object\" &&\n      schema[property] !== null\n    ) {\n      fixNullable(schema[property]);\n    }\n  });\n}\n\n/**\n * Generates a valid name, according to value of nameFor.\n * @param {string} input - String to generate a name from.\n * @param {string} nameFor - possible values are controller, function, variable.\n */\nexport function generateName(input, nameFor) {\n  var chars = \"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789.\";\n  var name = validator.whitelist(input, chars);\n  switch (nameFor) {\n    case \"controller\":\n      name += \"Controller\";\n      break;\n    case \"function\":\n      name = \"func\" + name;\n      break;\n    case \"variable\":\n      name = \"var\" + name;\n      break;\n    case undefined: //'nameFor' is undefined: just normalize\n      break;\n  }\n  return name;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,SAAS,MAAM,WAAW;AAEtC,OAAO,SAASC,WAAWA,CAACC,MAAM,EAAE;EAClCC,MAAM,CAACC,mBAAmB,CAACF,MAAM,CAAC,CAACG,OAAO,CAAEC,QAAQ,IAAK;IACvD,IACEA,QAAQ,KAAK,MAAM,IACnBJ,MAAM,CAACK,QAAQ,KAAK,IAAI,IACxBL,MAAM,CAACM,IAAI,KAAK,MAAM,IACtB,CAACC,KAAK,CAACC,OAAO,CAACR,MAAM,CAACM,IAAI,CAAC,IAC3BN,MAAM,CAACM,IAAI,CAACG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAClC;MACAT,MAAM,CAACM,IAAI,GAAG,CAACN,MAAM,CAACM,IAAI,EAAE,MAAM,CAAC;IACrC,CAAC,MAAM,IACL,OAAON,MAAM,CAACI,QAAQ,CAAC,KAAK,QAAQ,IACpCJ,MAAM,CAACI,QAAQ,CAAC,KAAK,IAAI,EACzB;MACAL,WAAW,CAACC,MAAM,CAACI,QAAQ,CAAC,CAAC;IAC/B;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,YAAYA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC3C,IAAIC,KAAK,GAAG,iEAAiE;EAC7E,IAAIC,IAAI,GAAGhB,SAAS,CAACiB,SAAS,CAACJ,KAAK,EAAEE,KAAK,CAAC;EAC5C,QAAQD,OAAO;IACb,KAAK,YAAY;MACfE,IAAI,IAAI,YAAY;MACpB;IACF,KAAK,UAAU;MACbA,IAAI,GAAG,MAAM,GAAGA,IAAI;MACpB;IACF,KAAK,UAAU;MACbA,IAAI,GAAG,KAAK,GAAGA,IAAI;MACnB;IACF,KAAKE,SAAS;MAAE;MACd;EACJ;EACA,OAAOF,IAAI;AACb"}